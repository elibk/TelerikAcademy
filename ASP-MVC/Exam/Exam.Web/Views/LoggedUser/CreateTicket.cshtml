@model Exam.Web.Models.NewTicketModel


@using (Html.BeginForm("CreateTicket","LoggedUser")) 
{
    @Html.AntiForgeryToken()
    
    if (ViewBag.ShowConfirm as bool? == true)
    {
          <div class="alert alert-success success">
        <p>
           Ticket added.
        </p>
    </div>
    }
    
   
    <fieldset class="form-horizontal">
        <h2>Add ticket</h2>

        <div class="control-group">
            @Html.LabelFor(model => model.CategoryId, new { @class = "control-label" })
                <div class="controls">
                    @Html.DropDownListFor(model => model.CategoryId, (IEnumerable<SelectListItem>)ViewBag.Categories)
                    @Html.ValidationMessageFor(model => model.CategoryId, null, new { @class = "help-inline" })
                </div>
            </div>
        <div class="control-group">
            @Html.LabelFor(model => model.Title, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Title)
                @Html.ValidationMessageFor(model => model.Title, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.PriorityValue, new { @class = "control-label" })
                <div class="controls">
                    @Html.DropDownListFor(model => model.PriorityValue, (IEnumerable<SelectListItem>)ViewBag.Priorities)
                    @Html.ValidationMessageFor(model => model.PriorityValue, null, new { @class = "help-inline" })
                </div>
            </div>

        <div class="control-group">
            @Html.LabelFor(model => model.UrlScreenshot, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.UrlScreenshot)
                @Html.ValidationMessageFor(model => model.UrlScreenshot, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.Description, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Description)
                @Html.ValidationMessageFor(model => model.Description, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="form-actions no-color">
            <input type="submit" value="Add ticket" class="btn" />
        </div>
    </fieldset>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

