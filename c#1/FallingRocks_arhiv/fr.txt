using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;

class FallingRocks
{

    static int rockPositionX = 0;
    static int rockPositionY = 0;
    static int rockPositionX2 = 8;
    static int rockPositionY2 = 0;
    static int rockType2 = 34;
    static int rockPositionX3 = 0;
    static int rockPositionY3 = 0;
    static int rockType3 = 36;
    static int playerPosition = 0;
    static int result = 0;
    static Random randomRockPosition = new Random();
    static Random randomRockType = new Random();
    static Random randomRockPosition2 = new Random();
    static Random randomRockType2 = new Random();
    static Random randomRockPosition3 = new Random();
    static Random randomRockType3 = new Random();
    static Random randomToSetNewRock = new Random();
    static string winerName;

    static void RemoveScrollBars()
    {
        Console.ForegroundColor = ConsoleColor.Yellow;
        Console.BufferHeight = Console.WindowHeight;
        Console.BufferWidth = Console.WindowWidth;
    }

    static void Drowplayer()
    {

            PrintAtPositionPlayer(playerPosition, Console.WindowHeight - 2, "(0)");

    }


    static void PrintAtPosition(int x, int y, char symbol)
    {
        Console.SetCursorPosition(x, y);
        Console.WriteLine(symbol);
    }
    static void PrintAtPositionPlayer(int x, int y, string symbol)
    {
        Console.SetCursorPosition(x, y);
        Console.WriteLine(symbol);
    }

    static void SetInitialPositions()
    {
        playerPosition = Console.WindowWidth / 2 ;

    }


    private static void MovePlayerRight()
    {
        if (playerPosition < Console.WindowWidth - 1 - 3)
        {
            playerPosition++;
        }
    }

    private static void MovePlayerLeft()
    {
        if (playerPosition > 0)
        {
            playerPosition--;
        }
    }

    static void PrintResult()
    {
        Console.SetCursorPosition(Console.WindowWidth / 2 - 1, 0);
        Console.Write(result);
    }

    static void Main()
    {
        RemoveScrollBars();
        SetInitialPositions();
        while (true)
        {
            while (Console.KeyAvailable)
            {
                Console.ReadKey(); // clear buffer
            }
        rockPositionY = 0;
        int RockPositionX = randomRockPosition.Next(1, 80);
        int RockType = randomRockType.Next(33, 44);
       // int setNewRock = randomToSetNewRock(0, 7);
        rockPositionX = RockPositionX;
        if (rockPositionY2 >= 23)
        {
            rockPositionY2 = 0;
            int RockPositionX2 = randomRockPosition.Next(1, 80);
            rockPositionX2 = RockPositionX2;
            int RockType2 = randomRockType.Next(33, 44);
            rockType2 = RockType2;
        }
        if (rockPositionY3 >= 23)
        {
            rockPositionY3 = 0;
            int RockPositionX3 = randomRockPosition.Next(1, 80);
            rockPositionX3 = RockPositionX3;
            int RockType3 = randomRockType.Next(33, 44);
            rockType3 = RockType3;
        }
        while (true)
        {
            if (rockPositionY <= 23)
            {
                rockPositionY++;
                if (rockPositionY % 2 == 0)
                {
                    rockPositionY2++;
                }
                else
                {
                    rockPositionY3++;
                }
            }
            if (rockPositionY > 23 || rockPositionY2 > 23 || rockPositionY3 > 23)
            {
                break;
            }
                Drowplayer();
                PrintResult();
                while (Console.KeyAvailable)
                {
                    ConsoleKeyInfo keyInfo = Console.ReadKey();
                    if (keyInfo.Key == ConsoleKey.LeftArrow)
                    {
                        MovePlayerLeft();
                    }
                    if (keyInfo.Key == ConsoleKey.RightArrow)
                    {
                        MovePlayerRight();
                    }
                    if (keyInfo.Key == ConsoleKey.F5)
                    {
                        Console.SetCursorPosition(Console.WindowWidth / 2 - 10, Console.WindowHeight / 2 - 5);
                        Console.Write("Enter Your Name:");
                        winerName = Console.ReadLine();
                        Console.SetCursorPosition(Console.WindowWidth / 2 - 10, Console.WindowHeight / 2);
                        Console.WriteLine("{0} your score is {1}.",winerName,result);
                        Console.SetCursorPosition(Console.WindowWidth / 2 - 10, Console.WindowHeight / 2 +5);
                        Console.WriteLine("Press any key to try again.");
                        result = 0;
                        Console.ReadKey();
                    }
                }
                PrintAtPosition(rockPositionX, rockPositionY, (char)RockType);
                PrintAtPosition(rockPositionX2, rockPositionY2, (char)rockType2);
                PrintAtPosition(rockPositionX3, rockPositionY3, (char)rockType3);
               
                if (rockPositionY >= Console.WindowHeight - 2)
                {
                    if (rockPositionX == playerPosition +1) 
                    {
                        result = result + 15;

                        if (rockType2 == 35)
                        {
                            result = result * 2;
                            Console.SetCursorPosition(Console.WindowWidth / 2 - 10, Console.WindowHeight / 2);
                            Console.Write("B O N U S! Double score!");
                            Console.ReadKey();
                        }
                    }
                }
                if (rockPositionY2 >= Console.WindowHeight - 2)
                {
                    if (rockPositionX2 == playerPosition + 1)
                    {
                        result = result + 5;
                    }
                }
                if (rockPositionY3 >= Console.WindowHeight - 2)
                {
                    if (rockPositionX3 == playerPosition + 1)
                    {
                        result = result + 5;
                    }
                }
                Thread.Sleep(150);
                Console.Clear();
        }
    }
    }
}
